{"title":"Collapse","store":"./src/data/collapse.json","route":"/components/collapse","link":"https://getbootstrap.com/docs/5.1/components/collapse/","content":[{"title":"How it works","contents":[{"type":"desc","element":"The collapse JavaScript plugin is used to show and hide content. Buttons or anchors are used as triggers that are mapped to specific elements you toggle. Collapsing an element will animate the <code>height</code> from its current value to <code>0</code>. Given how CSS handles animations, you cannot use <code>padding</code> on a <code>.collapse</code> element. Instead, use the class as an independent wrapping element."}]},{"title":"Example","contents":[{"type":"desc","element":"Click the buttons below to show and hide another element via class changes:"},{"type":"desc","element":"Generally, we recommend using a button with the <code>data-bs-target</code> attribute. While not recommended from a semantic point of view, you can also use a link with the <code>href</code> attribute (and a <code>role=\"button\"</code>). In both cases, the <code>data-bs-toggle=\"collapse\"</code> is required."},{"type":"code","element":"<p>  <a class=\"btn btn-primary\" data-bs-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">    Link with href  </a>  <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">    Button with data-bs-target  </button></p><div class=\"collapse\" id=\"collapseExample\">  <div class=\"card card-body\">    Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.  </div></div>"}]},{"title":"Horizontal","contents":[{"type":"desc","element":"The collapse plugin also supports horizontal collapsing. Add the <code>.collapse-horizontal</code> modifier class to transition the <code>width</code> instead of <code>height</code> and set a <code>width</code> on the immediate child element. Feel free to write your own custom Sass, use inline styles, or use our <a href=\"/docs/5.1/utilities/sizing/\">width utilities</a>."},{"type":"code","element":"<p>  <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseWidthExample\" aria-expanded=\"false\" aria-controls=\"collapseWidthExample\">    Toggle width collapse  </button></p><div style=\"min-height: 120px;\">  <div class=\"collapse collapse-horizontal\" id=\"collapseWidthExample\">    <div class=\"card card-body\" style=\"width: 300px;\">      This is some placeholder content for a horizontal collapse. It's hidden by default and shown when triggered.    </div>  </div></div>"}]},{"title":"Multiple targets","contents":[{"type":"desc","element":"A <code>&lt;button&gt;</code> or <code>&lt;a&gt;</code> can show and hide multiple elements by referencing them with a selector in its <code>href</code> or <code>data-bs-target</code> attribute.Multiple <code>&lt;button&gt;</code> or <code>&lt;a&gt;</code> can show and hide an element if they each reference it with their <code>href</code> or <code>data-bs-target</code> attribute"},{"type":"code","element":"<p>  <a class=\"btn btn-primary\" data-bs-toggle=\"collapse\" href=\"#multiCollapseExample1\" role=\"button\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample1\">Toggle first element</a>  <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#multiCollapseExample2\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample2\">Toggle second element</button>  <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\".multi-collapse\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample1 multiCollapseExample2\">Toggle both elements</button></p><div class=\"row\">  <div class=\"col\">    <div class=\"collapse multi-collapse\" id=\"multiCollapseExample1\">      <div class=\"card card-body\">        Some placeholder content for the first collapse component of this multi-collapse example. This panel is hidden by default but revealed when the user activates the relevant trigger.      </div>    </div>  </div>  <div class=\"col\">    <div class=\"collapse multi-collapse\" id=\"multiCollapseExample2\">      <div class=\"card card-body\">        Some placeholder content for the second collapse component of this multi-collapse example. This panel is hidden by default but revealed when the user activates the relevant trigger.      </div>    </div>  </div></div>"}]},{"title":"Accessibility","contents":[{"type":"desc","element":"Be sure to add <code>aria-expanded</code> to the control element. This attribute explicitly conveys the current state of the collapsible element tied to the control to screen readers and similar assistive technologies. If the collapsible element is closed by default, the attribute on the control element should have a value of <code>aria-expanded=\"false\"</code>. If you’ve set the collapsible element to be open by default using the <code>show</code> class, set <code>aria-expanded=\"true\"</code> on the control instead. The plugin will automatically toggle this attribute on the control based on whether or not the collapsible element has been opened or closed (via JavaScript, or because the user triggered another control element also tied to the same collapsible element). If the control element’s HTML element is not a button (e.g., an <code>&lt;a&gt;</code> or <code>&lt;div&gt;</code>), the attribute <code>role=\"button\"</code> should be added to the element."},{"type":"desc","element":"If your control element is targeting a single collapsible element – i.e. the <code>data-bs-target</code> attribute is pointing to an <code>id</code> selector – you should add the <code>aria-controls</code> attribute to the control element, containing the <code>id</code> of the collapsible element. Modern screen readers and similar assistive technologies make use of this attribute to provide users with additional shortcuts to navigate directly to the collapsible element itself."},{"type":"desc","element":"Note that Bootstrap’s current implementation does not cover the various <em>optional</em> keyboard interactions described in the <a href=\"https://www.w3.org/TR/wai-aria-practices-1.1/#accordion\">WAI-ARIA Authoring Practices 1.1 accordion pattern</a> - you will need to include these yourself with custom JavaScript."}]},{"title":"Sass","contents":[{"type":"desc","element":"Collapse transition classes can be found in <code>scss/_transitions.scss</code> as these are shared across multiple components (collapse and accordion)."}]},{"title":"Usage","contents":[{"type":"desc","element":"The collapse plugin utilizes a few classes to handle the heavy lifting:"},{"type":"desc","element":"These classes can be found in <code>_transitions.scss</code>."},{"type":"desc","element":"Just add <code>data-bs-toggle=\"collapse\"</code> and a <code>data-bs-target</code> to the element to automatically assign control of one or more collapsible elements. The <code>data-bs-target</code> attribute accepts a CSS selector to apply the collapse to. Be sure to add the class <code>collapse</code> to the collapsible element. If you’d like it to default open, add the additional class <code>show</code>."},{"type":"desc","element":"To add accordion-like group management to a collapsible area, add the data attribute <code>data-bs-parent=\"#selector\"</code>. Refer to the <a href=\"/docs/5.1/components/accordion/\">accordion page</a> for more information."},{"type":"desc","element":"Enable manually with:"},{"type":"desc","element":"Options can be passed via data attributes or JavaScript. For data attributes, append the option name to <code>data-bs-</code>, as in <code>data-bs-parent=\"\"</code>."},{"type":"desc","element":"Activates your content as a collapsible element. Accepts an optional options <code>object</code>."},{"type":"desc","element":"You can create a collapse instance with the constructor, for example:"},{"type":"desc","element":"Bootstrap’s collapse class exposes a few events for hooking into collapse functionality."}]}]}