{"title":"Popovers","store":"./src/data/popovers.json","route":"/components/popovers","link":"https://getbootstrap.com/docs/5.1/components/popovers/","content":[{"title":"Overview","contents":[{"type":"desc","element":"Things to know when using the popover plugin:"},{"type":"desc","element":"Keep reading to see how popovers work with some examples."}]},{"title":"Example: Enable popovers everywhere","contents":[{"type":"desc","element":"One way to initialize all popovers on a page would be to select them by their <code>data-bs-toggle</code> attribute:"}]},{"title":"Example: Using the container option","contents":[{"type":"desc","element":"When you have some styles on a parent element that interfere with a popover, you’ll want to specify a custom <code>container</code> so that the popover’s HTML appears within that element instead."}]},{"title":"Example","contents":[{"type":"code","element":"<button type=\"button\" class=\"btn btn-lg btn-danger\" data-bs-toggle=\"popover\" title=\"Popover title\" data-bs-content=\"And here's some amazing content. It's very engaging. Right?\">Click to toggle popover</button>"},{"type":"desc","element":"Four options are available: top, right, bottom, and left aligned. Directions are mirrored when using Bootstrap in RTL."},{"type":"code","element":"<button type=\"button\" class=\"btn btn-secondary\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"top\" data-bs-content=\"Top popover\">  Popover on top</button><button type=\"button\" class=\"btn btn-secondary\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"right\" data-bs-content=\"Right popover\">  Popover on right</button><button type=\"button\" class=\"btn btn-secondary\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"bottom\" data-bs-content=\"Bottom popover\">  Popover on bottom</button><button type=\"button\" class=\"btn btn-secondary\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"left\" data-bs-content=\"Left popover\">  Popover on left</button>"},{"type":"desc","element":"Use the <code>focus</code> trigger to dismiss popovers on the user’s next click of a different element than the toggle element."},{"type":"code","element":"<a tabindex=\"0\" class=\"btn btn-lg btn-danger\" role=\"button\" data-bs-toggle=\"popover\" data-bs-trigger=\"focus\" title=\"Dismissible popover\" data-bs-content=\"And here's some amazing content. It's very engaging. Right?\">Dismissible popover</a>"},{"type":"desc","element":"Elements with the <code>disabled</code> attribute aren’t interactive, meaning users cannot hover or click them to trigger a popover (or tooltip). As a workaround, you’ll want to trigger the popover from a wrapper <code>&lt;div&gt;</code> or <code>&lt;span&gt;</code>, ideally made keyboard-focusable using <code>tabindex=\"0\"</code>."},{"type":"desc","element":"For disabled popover triggers, you may also prefer <code>data-bs-trigger=\"hover focus\"</code> so that the popover appears as immediate visual feedback to your users as they may not expect to <em>click</em> on a disabled element."},{"type":"code","element":"<span class=\"d-inline-block\" tabindex=\"0\" data-bs-toggle=\"popover\" data-bs-trigger=\"hover focus\" data-bs-content=\"Disabled popover\">  <button class=\"btn btn-primary\" type=\"button\" disabled=\"\">Disabled button</button></span>"}]},{"title":"Usage","contents":[{"type":"desc","element":"Enable popovers via JavaScript:"},{"type":"desc","element":"Options can be passed via data attributes or JavaScript. For data attributes, append the option name to <code>data-bs-</code>, as in <code>data-bs-animation=\"\"</code>. Make sure to change the case type of the option name from camelCase to kebab-case when passing the options via data attributes. For example, instead of using <code>data-bs-customClass=\"beautifier\"</code>, use <code>data-bs-custom-class=\"beautifier\"</code>."},{"type":"desc","element":"Reveals an element’s popover. <strong>Returns to the caller before the popover has actually been shown</strong> (i.e. before the <code>shown.bs.popover</code> event occurs). This is considered a “manual” triggering of the popover. Popovers whose title and content are both zero-length are never displayed."},{"type":"desc","element":"Hides an element’s popover. <strong>Returns to the caller before the popover has actually been hidden</strong> (i.e. before the <code>hidden.bs.popover</code> event occurs). This is considered a “manual” triggering of the popover."},{"type":"desc","element":"Toggles an element’s popover. <strong>Returns to the caller before the popover has actually been shown or hidden</strong> (i.e. before the <code>shown.bs.popover</code> or <code>hidden.bs.popover</code> event occurs). This is considered a “manual” triggering of the popover."},{"type":"desc","element":"Hides and destroys an element’s popover (Removes stored data on the DOM element). Popovers that use delegation (which are created using <a href=\"#options\">the <code>selector</code> option</a>) cannot be individually destroyed on descendant trigger elements."},{"type":"desc","element":"Gives an element’s popover the ability to be shown. <strong>Popovers are enabled by default.</strong>"},{"type":"desc","element":"Removes the ability for an element’s popover to be shown. The popover will only be able to be shown if it is re-enabled."},{"type":"desc","element":"Toggles the ability for an element’s popover to be shown or hidden."},{"type":"desc","element":"Updates the position of an element’s popover."},{"type":"desc","element":"<em>Static</em> method which allows you to get the popover instance associated with a DOM element"},{"type":"desc","element":"<em>Static</em> method which allows you to get the popover instance associated with a DOM element, or create a new one in case it wasn’t initialized"}]}]}