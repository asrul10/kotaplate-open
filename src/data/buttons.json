{"title":"Buttons","store":"./src/data/buttons.json","link":"https://getbootstrap.com/docs/5.1/components/buttons/","route":"/components/buttons","content":[{"title":"Examples","contents":[{"type":"desc","element":"Bootstrap includes several predefined button styles, each serving its own semantic purpose, with a few extras thrown in for more control."},{"type":"code","element":"<button type=\"button\" class=\"btn btn-primary\">Primary</button><button type=\"button\" class=\"btn btn-secondary\">Secondary</button><button type=\"button\" class=\"btn btn-success\">Success</button><button type=\"button\" class=\"btn btn-danger\">Danger</button><button type=\"button\" class=\"btn btn-warning\">Warning</button><button type=\"button\" class=\"btn btn-info\">Info</button><button type=\"button\" class=\"btn btn-light\">Light</button><button type=\"button\" class=\"btn btn-dark\">Dark</button><button type=\"button\" class=\"btn btn-link\">Link</button>"}]},{"title":"Disable text wrapping","contents":[{"type":"desc","element":"If you don’t want the button text to wrap, you can add the <code>.text-nowrap</code> class to the button. In Sass, you can set <code>$btn-white-space: nowrap</code> to disable text wrapping for each button."}]},{"title":"Button tags","contents":[{"type":"desc","element":"The <code>.btn</code> classes are designed to be used with the <code>&lt;button&gt;</code> element. However, you can also use these classes on <code>&lt;a&gt;</code> or <code>&lt;input&gt;</code> elements (though some browsers may apply a slightly different rendering)."},{"type":"desc","element":"When using button classes on <code>&lt;a&gt;</code> elements that are used to trigger in-page functionality (like collapsing content), rather than linking to new pages or sections within the current page, these links should be given a <code>role=\"button\"</code> to appropriately convey their purpose to assistive technologies such as screen readers."},{"type":"code","element":"<a class=\"btn btn-primary\" href=\"#\" role=\"button\">Link</a><button class=\"btn btn-primary\" type=\"submit\">Button</button><input class=\"btn btn-primary\" type=\"button\" value=\"Input\"><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\"><input class=\"btn btn-primary\" type=\"reset\" value=\"Reset\">"}]},{"title":"Outline buttons","contents":[{"type":"desc","element":"In need of a button, but not the hefty background colors they bring? Replace the default modifier classes with the <code>.btn-outline-*</code> ones to remove all background images and colors on any button."},{"type":"code","element":"<button type=\"button\" class=\"btn btn-outline-primary\">Primary</button><button type=\"button\" class=\"btn btn-outline-secondary\">Secondary</button><button type=\"button\" class=\"btn btn-outline-success\">Success</button><button type=\"button\" class=\"btn btn-outline-danger\">Danger</button><button type=\"button\" class=\"btn btn-outline-warning\">Warning</button><button type=\"button\" class=\"btn btn-outline-info\">Info</button><button type=\"button\" class=\"btn btn-outline-light\">Light</button><button type=\"button\" class=\"btn btn-outline-dark\">Dark</button>"}]},{"title":"Sizes","contents":[{"type":"desc","element":"Fancy larger or smaller buttons? Add <code>.btn-lg</code> or <code>.btn-sm</code> for additional sizes."},{"type":"code","element":"<button type=\"button\" class=\"btn btn-primary btn-lg\">Large button</button><button type=\"button\" class=\"btn btn-secondary btn-lg\">Large button</button>"},{"type":"code","element":"<button type=\"button\" class=\"btn btn-primary btn-sm\">Small button</button><button type=\"button\" class=\"btn btn-secondary btn-sm\">Small button</button>"}]},{"title":"Disabled state","contents":[{"type":"desc","element":"Make buttons look inactive by adding the <code>disabled</code> boolean attribute to any <code>&lt;button&gt;</code> element. Disabled buttons have <code>pointer-events: none</code> applied to, preventing hover and active states from triggering."},{"type":"code","element":"<button type=\"button\" class=\"btn btn-lg btn-primary\" disabled=\"\">Primary button</button><button type=\"button\" class=\"btn btn-secondary btn-lg\" disabled=\"\">Button</button>"},{"type":"desc","element":"Disabled buttons using the <code>&lt;a&gt;</code> element behave a bit different:"},{"type":"code","element":"<a class=\"btn btn-primary btn-lg disabled\" role=\"button\" aria-disabled=\"true\">Primary link</a><a class=\"btn btn-secondary btn-lg disabled\" role=\"button\" aria-disabled=\"true\">Link</a>"},{"type":"desc","element":"To cover cases where you have to keep the <code>href</code> attribute on a disabled link, the <code>.disabled</code> class uses <code>pointer-events: none</code> to try to disable the link functionality of <code>&lt;a&gt;</code>s. Note that this CSS property is not yet standardized for HTML, but all modern browsers support it. In addition, even in browsers that do support <code>pointer-events: none</code>, keyboard navigation remains unaffected, meaning that sighted keyboard users and users of assistive technologies will still be able to activate these links. So to be safe, in addition to <code>aria-disabled=\"true\"</code>, also include a <code>tabindex=\"-1\"</code> attribute on these links to prevent them from receiving keyboard focus, and use custom JavaScript to disable their functionality altogether."},{"type":"code","element":"<a href=\"#\" class=\"btn btn-primary btn-lg disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">Primary link</a><a href=\"#\" class=\"btn btn-secondary btn-lg disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">Link</a>"}]},{"title":"Block buttons","contents":[{"type":"desc","element":"Create responsive stacks of full-width, “block buttons” like those in Bootstrap 4 with a mix of our display and gap utilities. By using utilities instead of button specific classes, we have much greater control over spacing, alignment, and responsive behaviors."},{"type":"code","element":"<div class=\"d-grid gap-2\">  <button class=\"btn btn-primary\" type=\"button\">Button</button>  <button class=\"btn btn-primary\" type=\"button\">Button</button></div>"},{"type":"desc","element":"Here we create a responsive variation, starting with vertically stacked buttons until the <code>md</code> breakpoint, where <code>.d-md-block</code> replaces the <code>.d-grid</code> class, thus nullifying the <code>gap-2</code> utility. Resize your browser to see them change."},{"type":"code","element":"<div class=\"d-grid gap-2 d-md-block\">  <button class=\"btn btn-primary\" type=\"button\">Button</button>  <button class=\"btn btn-primary\" type=\"button\">Button</button></div>"},{"type":"desc","element":"You can adjust the width of your block buttons with grid column width classes. For example, for a half-width “block button”, use <code>.col-6</code>. Center it horizontally with <code>.mx-auto</code>, too."},{"type":"code","element":"<div class=\"d-grid gap-2 col-6 mx-auto\">  <button class=\"btn btn-primary\" type=\"button\">Button</button>  <button class=\"btn btn-primary\" type=\"button\">Button</button></div>"},{"type":"desc","element":"Additional utilities can be used to adjust the alignment of buttons when horizontal. Here we’ve taken our previous responsive example and added some flex utilities and a margin utility on the button to right align the buttons when they’re no longer stacked."},{"type":"code","element":"<div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">  <button class=\"btn btn-primary me-md-2\" type=\"button\">Button</button>  <button class=\"btn btn-primary\" type=\"button\">Button</button></div>"}]},{"title":"Button plugin","contents":[{"type":"desc","element":"The button plugin allows you to create simple on/off toggle buttons."},{"type":"desc","element":"Add <code>data-bs-toggle=\"button\"</code> to toggle a button’s <code>active</code> state. If you’re pre-toggling a button, you must manually add the <code>.active</code> class <strong>and</strong> <code>aria-pressed=\"true\"</code> to ensure that it is conveyed appropriately to assistive technologies."},{"type":"code","element":"<button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"button\" autocomplete=\"off\">Toggle button</button><button type=\"button\" class=\"btn btn-primary active\" data-bs-toggle=\"button\" autocomplete=\"off\" aria-pressed=\"true\">Active toggle button</button><button type=\"button\" class=\"btn btn-primary\" disabled=\"\" data-bs-toggle=\"button\" autocomplete=\"off\">Disabled toggle button</button>"},{"type":"code","element":"<a href=\"#\" class=\"btn btn-primary\" role=\"button\" data-bs-toggle=\"button\">Toggle link</a><a href=\"#\" class=\"btn btn-primary active\" role=\"button\" data-bs-toggle=\"button\" aria-pressed=\"true\">Active toggle link</a><a class=\"btn btn-primary disabled\" aria-disabled=\"true\" role=\"button\" data-bs-toggle=\"button\">Disabled toggle link</a>"},{"type":"desc","element":"You can create a button instance with the button constructor, for example:"},{"type":"desc","element":"For example, to toggle all buttons"}]},{"title":"Sass","contents":[{"type":"desc","element":"There are three mixins for buttons: button and button outline variant mixins (both based on <code>$theme-colors</code>), plus a button size mixin."},{"type":"desc","element":"Button variants (for regular and outline buttons) use their respective mixins with our <code>$theme-colors</code> map to generate the modifier classes in <code>scss/_buttons.scss</code>."}]}]}